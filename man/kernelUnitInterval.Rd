% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kernelUnitInterval.r
\name{kernelUnitInterval}
\alias{kernelUnitInterval}
\title{Estimate a density on the unit interval or unit square via
local regression}
\usage{
kernelUnitInterval(
  x,
  transformation = "probit",
  eval.points = x,
  subsample = 1e+05,
  cv = FALSE,
  epsilon = 1e-15,
  epsilon.max = 0.999,
  maxk = 100,
  trim = 0.02,
  ...
)
}
\arguments{
\item{x}{Either a vector or a 2-column matrix}

\item{transformation}{Either probit (default), complementary log-log, or
identity (not recommended)}

\item{eval.points}{Points at which to evaluate the estimate, default x}

\item{subsample}{Number of points that are randomly subsampled for
computing the fit; useful for computational efficiency and for ensuring
the density estimation does not run out of memory. NULL means no the
fit is performed on all points}

\item{cv}{Whether to use generalized cross-validation to choose the
nn (nearest neighbor) smoothing parameter}

\item{epsilon}{How close values are allowed to come to 0}

\item{epsilon.max}{How close values are allowed to come to 1}

\item{maxk}{maxk argument passed to locfit}

\item{trim}{In one-dimensional fitting, the very edges often have high
variance. This parameter fixes the estimate on the intervals
(0, trim) and (1 - trim, 1).}

\item{...}{additional arguments to be passed to lp in locfit, used only
if cv=FALSE}
}
\description{
Provide density estimates that are needed by \code{fqvalue} and \code{estimate_fpi0}
}
\examples{
set.seed(12)
sim.ttests = simulate_t_tests(m = 1000)
p <- sim.ttests$p
z0 <- sim.ttests$n
z <- rank(z0) / length(z0)
lambda <- 0.3
phi <- as.numeric(p > lambda)
kernelUnitInterval(z[phi == 1], eval.points = z, cv = FALSE)

}
