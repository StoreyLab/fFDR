% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/simulation.R
\name{add.columns}
\alias{add.columns}
\title{#Factorial simulation on all combinations of simulateTTests and
#fqvalue parameters
#
#Given a list of possible parameters to be passed to \code{simulateTTests} and
#parameters to be passed to \code{fqvalue}, perform a simulation that combines
#those parameters in all possible ways, performs simulated t-tests, then uses
#fqvalue to find functional q-values for each. Also use the traditional qvalue
#package to find and report q-values.
#
#}
\usage{
add.columns(pvalue, n, mu, oracle, pars = list(), z = NULL, pi0 = NULL)
}
\arguments{
\item{sim.pars}{A list of vectors of parameters that can be passed to
#simulateTTests
#}

\item{fq.pars}{A list of vectors of parameters that can be passed to
#fqvalue, along with the pvalue and n from the simulations
#}

\item{replications}{Number of replications of each simulation
#}

\item{fpi0}{Whether to perform an fpi0 specific simulation, where
#pi0 is generated as a function of a latent variable z
#
#}
}
\value{
A data.table, the first columns of which contain the simulation
#parameters and the fqvalue parameters used in each simulation, followed by
#
#\item{pvalue}{P-value from the simulation}
#\item{n}{Sample size of sample from the simulation, used as z in fqvalue}
#\item{qZ}{Quantiles of n (used as Z) in fqvalue package}
#\item{mu}{True mean of randomly generated sample}
#\item{oracle}{TRUE or FALSE on whether the sample was null (mu=0)}
#\item{qvalue}{Traditional q-value, calculated using the qvalue package}
#\item{qpi0}{Pi0 calculated with the qvalue package (constant across tests)}
#\item{fqvalue}{Functional q-value calculated with the fqvalue function}
#\item{fpi0}{Estimate of functional pi0 reported by fqvalue}
#
#
}
\description{
#Factorial simulation on all combinations of simulateTTests and
#fqvalue parameters
#
#Given a list of possible parameters to be passed to \code{simulateTTests} and
#parameters to be passed to \code{fqvalue}, perform a simulation that combines
#those parameters in all possible ways, performs simulated t-tests, then uses
#fqvalue to find functional q-values for each. Also use the traditional qvalue
#package to find and report q-values.
#
#
}
\examples{
#
#sim = factorialSim(sim.pars=list(m=c(2500, 5000), pi0=c(.5, .75)),
#                   fq.pars=list(pi0.method=c("kernel", "spline")))
#
#
}

